import hashlib
with open(r"Downloads\ciphertext.enc", "rb") as f:
    ciphertext = f.read()
def generate_key(first_byte, length):
    """Generate key exactly like the encryption code."""
    key = bytes([first_byte])
    for _ in range(1, length):
        next_byte = hashlib.sha256(key).digest()[0] % 128
        key += bytes([next_byte])
    return key
def group_add(m1, m2):
    assert len(m1) == len(m2)
    res = ""
    for i in range(len(m1)):
        if ((m2[i]-m1[i])<0) :
            res += chr((m2[i]-m1[i])+128)
        else:
            res += chr((m2[i]-m1[i]))
    return res
for i in range(0,127):
    key=generate_key(i,len(ciphertext)) # We get the flag at first byte = 111
    
    print(group_add(key,ciphertext))
